 #  output$rid <-
    # renderUI({
     #  for (i in 1:input$numid){
      #   textInput(paste0("id",i), paste0("Deonet ID",i))
      # }
    # })
   
   
   
  # TRYING to use loop/while but not working
  #  output$rid <- 
    #  renderUI({
    #    i=1
     #   j=input$numid
     #     while (i<=j){
     #       id=paste0("id",i)
     #       print(id)
    #        text= paste("Deonet ID",i)
    #        output$id<- renderUI({textInput(id, text)})
    #        i = i+1
   #       }
   #   })
  



  #This version is the closest I got to having something that worked, It was not
  #perfect by any means but it was pretty darn good, it could show you 1 blank
  #for the first DoenetID, 2 for the second, 3 for the third, but like you could
  #not add 2 in the two blanks, it was the second blank shown twice. I do not 
  # have any idea why it worked this way, may try to touch base with Dr. Thomas
  #
  
  #   number_ids = reactive(input$numid)
  # output$rid <-
  #     renderUI({
  #       print(input)
  #     outputs = vector(mode = "list", length = 5)
  #     print(cat("length of outputs", length(outputs)))
  #     print(outputs)
  # 
  #     print(cat("numid ",input$numid))
  #     for(i in c(1:number_ids())){
  #       print(cat("i ", i))
  #       outputs[[i]] = renderUI({textInput(paste0("id",i), paste0("Deonet ID",i))})
  #       print(outputs[[i]])
  #       print(outputs)
  #     }
  #     output$id1 = outputs[[1]]
  #     output$id2 = outputs[[2]]
  #     output$id3 = outputs[[3]]
  #     output$id4 = outputs[[4]]
  #     output$id5 = outputs[[5]]
  #   })
  
  
  

    #Ideas - one, fix the problem we have so it shows all your options and they
    # are not all the same textInput shown multiple times
    # Two - rig it differently so that you can select which one you want to add
    # and then have it show one box at a time. A little more homebrewed but it 
    # could make an impact.
  
    #To make the one-blank-at-a-time solution I am thinking we could use number_ids()
    # in place of i and then just use output$id1, but assign it to a different
    # textInput each time we do it? I guess that doesn't work because we still 
    # need ot have an id for it, and that has to be different each time to do this
    # so maybe go through and null out all the other ones each time we do this?

  # This one doesn't work at all
  
  # number_ids = reactive(input$numid)
  # output$rid <-
  #   renderUI({
  #     print(class(input))
  #     print(input)
  #     outputs = vector(mode = "list", length = 5)
  #     outputs[[number_ids()]] = renderUI({textInput(paste0("id",i), paste0("Deonet ID",i))})
  #     output$id1 = outputs[[1]]
  #     output$id2 = outputs[[2]]
  #     output$id3 = outputs[[3]]
  #     output$id4 = outputs[[4]]
  #     output$id5 = outputs[[5]]
  #   })
  #   
  
  
  
  
  #   An early attempt at the basic version with one extra ID
  
    # link = "https://www.doenet.org/api/getEventData.php?doenetId[]=_YImZRcgrUqyNBLHd0tbP2"
   #df <- eventReactive(input$submit_extra | input$update, {
     # if(input$submit_extra != 0){
    #    link = paste0(link, "&doenetId[]=",input$extra_id)
   #     }
   #  stream_in(file(link))
  #  })

    